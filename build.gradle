plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'info.solidsoft.pitest' version '1.5.1'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'


java {
	sourceCompatibility = '11'
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	//implementation 'org.springframework:spring-webmvc:6.0.11'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
jacoco{
	toolVersion = "0.8.5"
//	reportsDir = file("$buildDir/customJacocoReportDir")
}

pitest {
	junit5PluginVersion = '0.15'
	timestampedReports = false
	outputFormats = ['XML', 'HTML']
}